//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.13

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "courses")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: Uuid,
    pub number: String,
    pub units: String,
    pub season: String,
    pub year: i16,
    pub related_urls: Json,
    pub special_permission: bool,
    #[sea_orm(column_type = "Text", nullable)]
    pub description: Option<String>,
    #[sea_orm(column_type = "Text", nullable)]
    pub prerequisites: Option<String>,
    pub corequisites: Json,
    pub crosslisted: Json,
    #[sea_orm(column_type = "Text", nullable)]
    pub notes: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::components::Entity")]
    Components,
}

impl Related<super::components::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Components.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
